{"version":3,"sources":["assets/bput_logo.jpeg","components/TabPanel.js","components/Developer.js","components/Header.js","components/Loading.js","components/SGPA/SelectContainer.js","components/SGPA/DataTable.js","components/SGPA/AddButton.js","components/SGPA/CalculationButton.js","components/SGPA/Body.js","components/SGPA/SGPA.js","components/CGPA/SelectContainer.js","components/CGPA/DataContainer.js","components/CGPA/CalculationButton.js","components/CGPA/Body.js","components/CGPA/CGPA.js","components/percentage/Body.js","components/percentage/Percentage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TabPanel","children","value","index","Box","component","role","hidden","p","useHover","useState","setValue","ref","useRef","handleMouseOver","handleMouseOut","useEffect","node","current","addEventListener","removeEventListener","Developer","hoverRef","isHovered","href","rel","target","style","color","textDecoration","marginLeft","Header","tabValue","handleTabChange","Container","maxWidth","height","align","src","Logo","alt","Typography","variant","fontFamily","Paper","square","elevation","Tabs","onChange","indicatorColor","textColor","Tab","label","Loading","CircularProgress","SelectContainer","branches","selectedBranch","semesters","selectedSemester","handleBranch","handleSemester","handleConfirm","Grid","container","spacing","justify","item","xs","sm","md","TextField","select","e","fullWidth","map","branch","MenuItem","key","branchName","disabled","length","semester","semesterName","Button","startIcon","size","onClick","DataTable","subjects","handleDeleteSubject","handleCreditChange","handleGrade","handleNewSubject","isCreditsEditable","setIsCreditsEditable","TableContainer","className","Table","TableHead","TableRow","TableCell","IconButton","aria-label","fontSize","TableBody","subject","isNew","subjectName","display","justifyContent","width","credits","grade","AddButton","handleAddSubject","Fab","margin","top","right","bottom","left","position","CalculationButton","handelCalculate","TransitionUp","props","Slide","direction","Body","dataFromAPI","setBranches","setSelectedBranch","setSemesters","setSelectedSemester","setSubjects","snackbarOpen","setSnackbarOpen","undefined","snackbarTransition","setSnackbarTransition","totalSGPA","setTotalSGPA","forEach","branchData","b_index","push","localStorage","getItem","semesterData","s_index","initialSubjects","subjectData","subjectList","splice","credit","isNaN","parseInt","name","gradePoint","creditPoints","totalCredits","reduce","prev","cur","console","log","gradeValue","toFixed","setItem","Snackbar","open","onClose","TransitionComponent","autoHideDuration","message","action","SGPA","setDataFromAPI","isLoading","setIsLoading","a","async","fetch","res","json","data","fetchDataFromAPI","fromSemester","toSemester","handleFromSemester","handleToSemester","DataContainer","allSemesters","sgpa","type","setFromSemester","setToSemester","setAllSemesters","totalCGPA","setTotalCGPA","semestersList","suffixText","i","Divider","parseFloat","CGPA","curr","cgpaValue","setCgpaValue","percentageValue","setPercentageValue","cgpa","percentage","Percentage","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","typography","join","App","React","setTabValue","ThemeProvider","event","newValue","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58baa308.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bput_logo.1db4e6a0.jpeg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst TabPanel = ({ children, value, index }) => {\n    return (\n        <Box component=\"div\" role=\"tabpanel\" hidden={value !== index}>\n            {value === index && <Box p={3}>{children}</Box>}\n        </Box>\n    );\n};\n\nexport default TabPanel;\n","import React, { useRef, useState, useEffect } from 'react';\n\nconst Developer = () => {\n    const [hoverRef, isHovered] = useHover();\n\n    // return <div ref={hoverRef}>{isHovered ? '😁' : '☹️'}</div>;\n\n    return (\n        <a\n            href=\"https://devsmranjan.github.io\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            ref={hoverRef}\n            style={{\n                color: !isHovered ? '#A0A0A0' : '#4caf50',\n                textDecoration: 'none',\n                marginLeft: '4px'\n            }}\n        >\n            Smruti Ranjan Rana\n        </a>\n    );\n}\n\nconst useHover = () => {\n    const [value, setValue] = useState(false);\n\n    const ref = useRef(null);\n\n    const handleMouseOver = () => setValue(true);\n    const handleMouseOut = () => setValue(false);\n\n    useEffect(\n        () => {\n            const node = ref.current;\n            if (node) {\n                node.addEventListener('mouseover', handleMouseOver);\n                node.addEventListener('mouseout', handleMouseOut);\n\n                return () => {\n                    node.removeEventListener('mouseover', handleMouseOver);\n                    node.removeEventListener('mouseout', handleMouseOut);\n                };\n            }\n        },\n        [] // Recall only if ref changes\n    );\n\n    return [ref, value];\n}\n\nexport default Developer;","import React from 'react';\nimport {\n    Container,\n    Paper,\n    Tabs,\n    Tab,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport Logo from '../assets/bput_logo.jpeg';\nimport Developer from '../components/Developer';\n\nconst Header = ({ tabValue, handleTabChange }) => {\n    return (\n        <Container maxWidth=\"sm\">\n            <Box height=\"36px\" />\n            <Box align=\"center\">\n                <img src={Logo} alt=\"\" height=\"100\" />\n            </Box>\n            <Box height=\"24px\" />\n            <Typography\n                variant=\"h4\"\n                component=\"h5\"\n                align=\"center\"\n                style={{\n                    fontFamily: 'Special Elite'\n                }}\n            >\n                BPUT Calculator (B.Tech)\n            </Typography>\n            <Box height=\"14px\" />\n            <Typography\n                variant=\"subtitle2\"\n                component=\"h6\"\n                align=\"center\"\n                style={{\n                    fontFamily: 'Special Elite',\n                    color: '#A0A0A0'\n                }}\n            >\n                Developed by\n                <Developer />\n            </Typography>\n            <Box height=\"36px\" />\n            <Paper square elevation={0}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleTabChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"Sgpa\" />\n                    <Tab label=\"Cgpa\" />\n                    <Tab label=\"Percentage\" />\n                </Tabs>\n            </Paper>\n        </Container>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { CircularProgress, Box } from '@material-ui/core';\n\nconst Loading = () => {\n    return (\n        <Box align=\"center\">\n            <Box height=\"100px\" />\n            <CircularProgress />\n        </Box>\n    );\n}\n\nexport default Loading;","import React, { useEffect } from 'react';\nimport { Box, Grid, TextField, MenuItem, Button } from '@material-ui/core';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nconst SelectContainer = ({\n    branches,\n    selectedBranch,\n    semesters,\n    selectedSemester,\n    handleBranch,\n    handleSemester,\n    handleConfirm\n}) => {\n    return (\n        <Grid container spacing={1} justify=\"center\">\n            <Grid item xs={12} sm={6} md={4}>\n                <TextField\n                    select\n                    label=\"Select Branch\"\n                    value={selectedBranch.index}\n                    onChange={e => handleBranch(e.target.value)}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                >\n                    {branches.map((branch, index) => (\n                        <MenuItem key={index} value={index}>\n                            {branch.branchName}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={12} sm={4} md={2}>\n                <TextField\n                    select\n                    label=\"Select Semester\"\n                    value={selectedSemester.index}\n                    onChange={e => handleSemester(e.target.value)}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    disabled={semesters.length !== 0 ? null : true}\n                >\n                    {semesters.map((semester, index) => (\n                        <MenuItem key={index} value={index}>\n                            {semester.semesterName}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n\n            <Grid item xs={12} align=\"center\">\n                <Box height=\"14px\" />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<DoneAllIcon />}\n                    size=\"large\"\n                    disabled={\n                        selectedSemester.semesterName !== '' ? null : true\n                    }\n                    onClick={handleConfirm}\n                >\n                    Confirm\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default SelectContainer;\n","import React, { useState } from 'react';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Box,\n    IconButton,\n    TextField,\n    MenuItem\n} from '@material-ui/core';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst DataTable = ({\n    subjects,\n    handleDeleteSubject,\n    handleCreditChange,\n    handleGrade,\n    handleNewSubject\n}) => {\n    const [isCreditsEditable, setIsCreditsEditable] = useState(false);\n\n    const handelEditCredits = () => {\n        setIsCreditsEditable(true);\n    };\n    return (\n        <div>\n            <Box height=\"48px\" />\n            <TableContainer component={Paper} className=\"data-table\">\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">DELETE</TableCell>\n                            <TableCell>SUBJECTS</TableCell>\n                            <TableCell align=\"center\">\n                                CREDITS\n                                <IconButton\n                                    aria-label=\"lock\"\n                                    onClick={handelEditCredits}\n                                >\n                                    {!isCreditsEditable ? (\n                                        <LockIcon fontSize=\"small\" />\n                                    ) : (\n                                        <LockOpenIcon fontSize=\"small\" />\n                                    )}\n                                </IconButton>\n                            </TableCell>\n                            <TableCell align=\"center\">GRADES</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {subjects.map((subject, index) => (\n                            <TableRow key={index}>\n                                <TableCell align=\"center\">\n                                    <IconButton\n                                        aria-label=\"delete\"\n                                        onClick={e =>\n                                            handleDeleteSubject(index)\n                                        }\n                                    >\n                                        <DeleteIcon fontSize=\"small\" />\n                                    </IconButton>\n                                </TableCell>\n                                <TableCell>\n                                    {!subject.isNew ? (\n                                        subject.subjectName\n                                    ) : (\n                                        <TextField\n                                            fullWidth={true}\n                                            variant=\"outlined\"\n                                            value={subject.subjectName}\n                                            onChange={e => {\n                                                handleNewSubject(\n                                                    index,\n                                                    e.target.value\n                                                );\n                                            }}\n                                        />\n                                    )}\n                                </TableCell>\n                                <TableCell>\n                                    <Box display=\"flex\" justifyContent=\"center\">\n                                        <Box width=\"50px\">\n                                            <TextField\n                                                value={subject.credits}\n                                                className={\n                                                    !isCreditsEditable &&\n                                                    !subject.isNew\n                                                        ? 'credit-field input-style-before'\n                                                        : 'credit-field'\n                                                }\n                                                disabled={\n                                                    !isCreditsEditable &&\n                                                    !subject.isNew\n                                                        ? true\n                                                        : false\n                                                }\n                                                onChange={e =>\n                                                    handleCreditChange(\n                                                        index,\n                                                        e.target.value\n                                                    )\n                                                }\n                                            />\n                                        </Box>\n                                    </Box>\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <TextField\n                                        select\n                                        value={subject.grade}\n                                        onChange={e =>\n                                            handleGrade(index, e.target.value)\n                                        }\n                                        variant=\"outlined\"\n                                    >\n                                        <MenuItem value=\"O\">O</MenuItem>\n                                        <MenuItem value=\"E\">E</MenuItem>\n                                        <MenuItem value=\"A\">A</MenuItem>\n                                        <MenuItem value=\"B\">B</MenuItem>\n                                        <MenuItem value=\"C\">C</MenuItem>\n                                        <MenuItem value=\"D\">D</MenuItem>\n                                        <MenuItem value=\"F\">F</MenuItem>\n                                    </TextField>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n};\n\nexport default DataTable;\n","import React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n    Fab\n} from '@material-ui/core';\n\nconst AddButton = ({ handleAddSubject }) => {\n    return (\n        <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            style={{\n                margin: 0,\n                top: 'auto',\n                right: 20,\n                bottom: 20,\n                left: 'auto',\n                position: 'fixed'\n            }}\n            onClick={handleAddSubject}\n        >\n            <AddIcon />\n        </Fab>\n    );\n};\n\nexport default AddButton;","import React from 'react';\nimport { Fab, Box } from '@material-ui/core';\n\nconst CalculationButton = ({ handelCalculate }) => {\n    return (\n        <Fab variant=\"extended\" onClick={handelCalculate}>\n            <Box width=\"4px\" />\n            Calculate Now\n        </Fab>\n    );\n};\n\nexport default CalculationButton;","import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Snackbar,\n    Slide,\n    IconButton,\n    Typography\n} from '@material-ui/core';\nimport SelectContainer from './SelectContainer';\nimport DataTable from './DataTable';\nimport AddButton from './AddButton';\nimport CalculationButton from './CalculationButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst TransitionUp = props => {\n    return <Slide {...props} direction=\"up\" />;\n};\n\nconst Body = ({ dataFromAPI }) => {\n    const [branches, setBranches] = useState([]);\n    const [selectedBranch, setSelectedBranch] = useState({\n        branchName: '',\n        index: ''\n    });\n    const [semesters, setSemesters] = useState([]);\n    const [selectedSemester, setSelectedSemester] = useState({\n        semesterName: '',\n        index: ''\n    });\n\n    const [subjects, setSubjects] = useState([]);\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [totalSGPA, setTotalSGPA] = useState('');\n\n    useEffect(() => {\n        const branches = [];\n        dataFromAPI.forEach((branchData, b_index) => {\n            branches.push({\n                branchName: branchData.branchName,\n                index: b_index\n            });\n        });\n        setBranches(branches);\n    }, [dataFromAPI]);\n\n    const handleBranch = index => {\n        setSelectedBranch({\n            branchName: branches[index].branchName,\n            index: index\n        });\n\n        // update selectedSemesters\n        const semesters = [];\n        dataFromAPI[index].semesters.forEach((semesterData, s_index) => {\n            semesters.push({\n                semesterName: semesterData.semesterName,\n                index: s_index\n            });\n        });\n\n        setSemesters(semesters);\n    };\n\n    const handleSemester = index => {\n        setSelectedSemester({\n            semesterName: semesters[index].semesterName,\n            index: index\n        });\n    };\n\n    const handleConfirm = () => {\n        const initialSubjects = [];\n        dataFromAPI[selectedBranch.index].semesters[\n            selectedSemester.index\n        ].subjects.forEach(subjectData => {\n            initialSubjects.push({\n                subjectName: subjectData.subjectName,\n                credits: subjectData.credits,\n                grade: 'O'\n            });\n        });\n\n        setSubjects(initialSubjects);\n    };\n\n    const handleDeleteSubject = index => {\n        const subjectList = [...subjects];\n        subjectList.splice(index, 1);\n\n        setSubjects(subjectList);\n    };\n\n    const handleCreditChange = (index, credit) => {\n        const subjectList = [...subjects];\n\n        subjectList[index].credits = isNaN(parseInt(credit))\n            ? 0\n            : parseInt(credit);\n\n        setSubjects(subjectList);\n    };\n\n    const handleGrade = (index, grade) => {\n        const subjectList = [...subjects];\n        subjectList[index].grade = grade;\n\n        setSubjects(subjectList);\n    };\n\n    const handleAddSubject = () => {\n        const subjectList = [...subjects];\n        subjectList.push({\n            subjectName: 'New Subject',\n            credits: 0,\n            grade: 'O',\n            isNew: true\n        });\n\n        setSubjects(subjectList);\n    };\n\n    const handleNewSubject = (index, name) => {\n        const subjectList = [...subjects];\n\n        subjectList[index].subjectName = name;\n\n        setSubjects(subjectList);\n    };\n\n    const handelCalculate = () => {\n        // console.table(subjects);\n\n        let creditPoints = 0;\n        let gradePoint = 0;\n\n        const totalCredits = subjects.reduce((prev, cur) => {\n            return prev + cur.credits;\n        }, 0);\n\n        console.log(totalCredits);\n\n        subjects.map(subject => {\n            let gradeValue = 0;\n\n            switch (subject.grade) {\n                case 'O':\n                    gradeValue = 10;\n                    break;\n                case 'E':\n                    gradeValue = 9;\n                    break;\n                case 'A':\n                    gradeValue = 8;\n                    break;\n                case 'B':\n                    gradeValue = 7;\n                    break;\n                case 'C':\n                    gradeValue = 6;\n                    break;\n                case 'D':\n                    gradeValue = 5;\n                    break;\n                case 'F':\n                    gradeValue = 2;\n                    break;\n\n                default:\n                    gradeValue = 0;\n                    break;\n            }\n\n            return creditPoints += gradeValue * subject.credits;\n        });\n\n        gradePoint = (creditPoints / totalCredits).toFixed(2);\n\n        setTotalSGPA(gradePoint);\n\n        console.log({ totalCredits, creditPoints, gradePoint });\n\n        setSnackbarTransition(() => TransitionUp);\n        setSnackbarOpen(true);\n\n        localStorage.setItem('sgpa', gradePoint);\n\n        return;\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h6\" align=\"center\">\n                {localStorage.getItem('sgpa') !== null\n                    ? `Your last SGPA is ${localStorage.getItem(\n                          'sgpa'\n                      )}`\n                    : 'Hey! You are calculating for the first time.'}\n            </Typography>\n            <Box height=\"24px\" />\n            <SelectContainer\n                branches={branches}\n                selectedBranch={selectedBranch}\n                semesters={semesters}\n                selectedSemester={selectedSemester}\n                handleBranch={handleBranch}\n                handleSemester={handleSemester}\n                handleConfirm={handleConfirm}\n            />\n\n            {subjects.length !== 0 ? (\n                <div>\n                    <DataTable\n                        subjects={subjects}\n                        handleDeleteSubject={handleDeleteSubject}\n                        handleCreditChange={handleCreditChange}\n                        handleGrade={handleGrade}\n                        handleNewSubject={handleNewSubject}\n                    />\n                    <Box height=\"36px\" />\n\n                    <AddButton handleAddSubject={handleAddSubject} />\n\n                    <Box align=\"center\">\n                        <CalculationButton handelCalculate={handelCalculate} />\n                    </Box>\n                    <Box height=\"60px\" />\n                </div>\n            ) : (\n                <div></div>\n            )}\n\n            <Snackbar\n                open={snackbarOpen}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                autoHideDuration={6000}\n                message={`You have ${totalSGPA} SGPA`}\n                action={\n                    <IconButton\n                        size=\"small\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setSnackbarOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n        </div>\n    );\n};\n\nexport default Body;\n","import React, { useEffect, useState } from 'react';\nimport Loading from '../Loading';\nimport Body from './Body'\n\nconst SGPA = () => {\n    const [dataFromAPI, setDataFromAPI] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const fetchDataFromAPI = async () => {\n        var res = await fetch(\n            'https://devsmranjan.github.io/BPUT/bput-btech.json'\n        );\n        var data = await res.json();\n\n        setDataFromAPI(data);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        fetchDataFromAPI();\n    }, []);\n\n    return (\n        isLoading ? <Loading /> : <Body dataFromAPI={dataFromAPI} />\n    );\n};\n\nexport default SGPA;\n","import React from 'react';\nimport { Box, TextField, Grid, Button } from '@material-ui/core';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nconst SelectContainer = ({\n    fromSemester,\n    toSemester,\n    handleFromSemester,\n    handleToSemester,\n    handleConfirm\n}) => {\n    return (\n        <Grid container spacing={1} justify=\"center\">\n            <Grid item xs={6} sm={3}>\n                <TextField\n                    label=\"From Semester?\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={fromSemester === 0 ? '' : fromSemester}\n                    onChange={e => {\n                        handleFromSemester(e.target.value);\n                    }}\n                />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n                <TextField\n                    label=\"To Semester?\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                    value={toSemester === 0 ? '' : toSemester}\n                    onChange={e => {\n                        handleToSemester(e.target.value);\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12} align=\"center\">\n                <Box height=\"14px\" />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<DoneAllIcon />}\n                    size=\"large\"\n                    disabled={fromSemester !== 0 && toSemester !== 0 ? null : true}\n                    onClick={handleConfirm}\n                >\n                    Confirm\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default SelectContainer;\n","import React from 'react';\nimport { Grid, TextField, Typography, Box, Container } from '@material-ui/core';\n\nconst DataContainer = ({ allSemesters, handleSemester }) => {\n    return (\n        <Container>\n            <Typography variant=\"h6\" align=\"center\">\n                Put your SGPAs of each semester\n            </Typography>\n            <Box height=\"36px\" />\n            <Grid container spacing={2} justify=\"center\">\n                {allSemesters.map((semester, index) => {\n                    return (\n                        <Grid item xs={6} sm={3} key={index}>\n                            <TextField\n                                label={semester.semester}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={semester.sgpa}\n                                type=\"number\"\n                                onChange={e => {\n                                    handleSemester(index, e.target.value);\n                                }}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </Container>\n    );\n};\n\nexport default DataContainer;\n","import React from 'react';\nimport { Fab, Box } from '@material-ui/core';\n\nconst CalculationButton = ({ handelCalculate }) => {\n    return (\n        <Fab variant=\"extended\" onClick={handelCalculate}>\n            <Box width=\"4px\" />\n            Calculate Now\n        </Fab>\n    );\n};\n\nexport default CalculationButton;\n","import React, { useState } from 'react';\nimport SelectContainer from './SelectContainer';\nimport {\n    Typography,\n    Box,\n    Divider,\n    Snackbar,\n    Slide,\n    IconButton\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DataContainer from './DataContainer';\nimport CalculationButton from './CalculationButton';\n\nconst TransitionUp = props => {\n    return <Slide {...props} direction=\"up\" />;\n};\n\nconst Body = () => {\n    const [fromSemester, setFromSemester] = useState(0);\n    const [toSemester, setToSemester] = useState(0);\n    const [allSemesters, setAllSemesters] = useState([]);\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [totalCGPA, setTotalCGPA] = useState('');\n\n    const handleFromSemester = value => {\n        setFromSemester(isNaN(parseInt(value)) ? 0 : parseInt(value));\n    };\n\n    const handleToSemester = value => {\n        setToSemester(isNaN(parseInt(value)) ? 0 : parseInt(value));\n    };\n\n    const handleConfirm = () => {\n        const semestersList = [];\n        let suffixText = '';\n        for (let i = fromSemester; i <= toSemester; i++) {\n            switch (i) {\n                case 1:\n                    suffixText = 'st Semester';\n                    break;\n                case 2:\n                    suffixText = 'nd Semester';\n                    break;\n                case 3:\n                    suffixText = 'rd Semester';\n                    break;\n\n                default:\n                    suffixText = 'th Semester';\n                    break;\n            }\n\n            semestersList.push({\n                semester: `${i}${suffixText}`,\n                sgpa: 0\n            });\n        }\n\n        setAllSemesters(semestersList);\n    };\n\n    const handleSemester = (index, value) => {\n        const semestersList = [...allSemesters];\n\n        semestersList[index].sgpa = value !== '' ?  parseFloat(value) : 0;\n\n        setAllSemesters(semestersList);\n    };\n\n    const handelCalculate = () => {\n        const semestersList = [...allSemesters];\n\n        const totalSGPA = semestersList.reduce((prev, curr) => {\n            return prev + curr.sgpa;\n        }, 0);\n\n        const CGPA = (totalSGPA / semestersList.length).toFixed(2);\n\n        setTotalCGPA(CGPA);\n\n        setSnackbarTransition(() => TransitionUp);\n        setSnackbarOpen(true);\n\n        localStorage.setItem('cgpa', CGPA);\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h6\" align=\"center\">\n                {localStorage.getItem('cgpa') !== null\n                    ? `Your last CGPA is ${localStorage.getItem(\n                          'cgpa'\n                      )}`\n                    : 'Hey! You are calculating for the first time.'}\n            </Typography>\n            <Box height=\"24px\" />\n            <SelectContainer\n                fromSemester={fromSemester}\n                toSemester={toSemester}\n                handleFromSemester={handleFromSemester}\n                handleToSemester={handleToSemester}\n                handleConfirm={handleConfirm}\n            />\n            <Box height=\"24px\" />\n            {allSemesters.length !== 0 ? <div>\n                <Divider />\n                <Box height=\"24px\" />\n                <DataContainer\n                    allSemesters={allSemesters}\n                    handleSemester={handleSemester}\n                />\n                <Box height=\"36px\" />\n\n                <Box align=\"center\">\n                    <CalculationButton handelCalculate={handelCalculate} />\n                </Box>\n                <Box height=\"60px\" />\n            </div> : <div></div>}\n\n            <Snackbar\n                open={snackbarOpen}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                autoHideDuration={6000}\n                message={`You have ${totalCGPA} CGPA`}\n                action={\n                    <IconButton\n                        size=\"small\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setSnackbarOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n        </div>\n    );\n};\n\nexport default Body;\n","import React from 'react';\nimport Body from './Body';\n\nconst CGPA = () => {\n    return (\n        <Body />\n    );\n}\n\nexport default CGPA;","import React, { useState, useEffect } from 'react';\nimport {\n    Grid,\n    TextField,\n    Box,\n    Button,\n    Typography,\n    Snackbar,\n    Slide,\n    IconButton\n} from '@material-ui/core';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst TransitionUp = props => {\n    return <Slide {...props} direction=\"up\" />;\n};\n\nconst Body = () => {\n    const [cgpaValue, setCgpaValue] = useState(0);\n    const [percentageValue, setPercentageValue] = useState(0);\n\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    useEffect(() => {\n        let cgpa = localStorage.getItem('cgpa');\n        setCgpaValue(cgpa != null ? cgpa : 0);\n    }, []);\n\n    const handleCGPA = (value)  => {\n        setCgpaValue(value === '' ? 0 : value);\n    }\n\n    const handleCalculation = () => {\n        const percentage = ((cgpaValue - 0.5) * 10).toFixed(2);\n        setPercentageValue(percentage);\n\n        setSnackbarTransition(() => TransitionUp);\n        setSnackbarOpen(true);\n        localStorage.setItem('perecntage', `${percentage}`);\n    }\n\n\n\n    return (\n        <div>\n            <Typography variant=\"h6\" align=\"center\">\n                {localStorage.getItem('perecntage') !== null\n                    ? `Your last Percentage is ${localStorage.getItem(\n                          'perecntage'\n                      )}%`\n                    : 'Hey! You are calculating for the first time.'}\n            </Typography>\n            <Box height=\"24px\" />\n            <Grid container spacing={1} justify=\"center\">\n                <Grid item xs={12} sm={4}>\n                    <TextField\n                        label=\"What's your CGPA?\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        type=\"number\"\n                        value={cgpaValue}\n                        onChange={e => {\n                            handleCGPA(e.target.value);\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} align=\"center\">\n                    <Box height=\"14px\" />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<DoneAllIcon />}\n                        size=\"large\"\n                        disabled={cgpaValue !== 0 ? null : true}\n                        onClick={handleCalculation}\n                    >\n                        Calculate\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <Snackbar\n                open={snackbarOpen}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                autoHideDuration={6000}\n                message={`You have ${percentageValue}%`}\n                action={\n                    <IconButton\n                        size=\"small\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={() => {\n                            setSnackbarOpen(false);\n                        }}\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n        </div>\n    );\n};\n\nexport default Body;\n","import React from 'react';\nimport Body from './Body';\n\nconst Percentage = () => {\n    return <Body />;\n};\n\nexport default Percentage;\n","import React from 'react';\nimport 'typeface-special-elite';\nimport {\n    createMuiTheme,\n    ThemeProvider\n} from '@material-ui/core/styles';\nimport TabPanel from './components/TabPanel';\nimport Header from './components/Header';\nimport SGPA from './components/SGPA/SGPA';\nimport CGPA from './components/CGPA/CGPA';\nimport Percentage from './components/percentage/Percentage';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#4caf50'\n        },\n        secondary: {\n            light: '#0066ff',\n            main: '#0044ff',\n            contrastText: '#ffcc00'\n        },\n        type: 'light'\n    },\n    typography: {\n        fontFamily: ['Poppins', 'Special Elite'].join(',')\n    }\n});\n\nconst App = () => {\n    // Tabs\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Header handleTabChange={handleTabChange} tabValue={tabValue} />\n            <TabPanel value={tabValue} index={0}>\n                <SGPA />\n            </TabPanel>\n            <TabPanel value={tabValue} index={1}>\n                <CGPA />\n            </TabPanel>\n            <TabPanel value={tabValue} index={2}>\n                <Percentage />\n            </TabPanel>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}